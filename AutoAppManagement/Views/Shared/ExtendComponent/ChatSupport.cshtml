@*
    Chat Support Component - Hỗ trợ chat trực tuyến
*@

<div id="chat-support-widget" class="chat-widget">
    <div class="chat-toggle" onclick="toggleChatWidget()">
        <i class="mdi mdi-message-text-outline"></i>
        <span class="chat-badge" id="chat-badge" style="display: none;">1</span>
    </div>
    
    <div class="chat-window" id="chat-window" style="display: none;">
        <div class="chat-header">
            <div class="chat-header-info">
                <img src="/assets/images/faces/face1.jpg" alt="Support" class="support-avatar">
                <div class="support-info">
                    <h6>Hỗ trợ khách hàng</h6>
                    <span class="status online">Đang trực tuyến</span>
                </div>
            </div>
            <div class="chat-actions">
                <button class="btn-minimize" onclick="minimizeChatWidget()">
                    <i class="mdi mdi-minus"></i>
                </button>
                <button class="btn-close" onclick="closeChatWidget()">
                    <i class="mdi mdi-close"></i>
                </button>
            </div>
        </div>
        
        <div class="chat-messages" id="chat-messages">
            <div class="message support-message">
                <div class="message-content">
                    <p>Xin chào! Tôi có thể giúp gì cho bạn?</p>
                    <span class="message-time">Vừa xong</span>
                </div>
            </div>
        </div>
        
        <div class="chat-input-area">
            <div class="chat-input-wrapper">
                <input type="text" id="chat-input" placeholder="Nhập tin nhắn..." onkeypress="handleChatKeyPress(event)">
                <button class="btn-send" onclick="sendChatMessage()">
                    <i class="mdi mdi-send"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.chat-widget {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.chat-toggle {
    width: 60px;
    height: 60px;
    background: #007bff;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    transition: all 0.3s ease;
    position: relative;
}

.chat-toggle:hover {
    background: #0056b3;
    transform: scale(1.1);
}

.chat-toggle i {
    color: white;
    font-size: 24px;
}

.chat-badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background: #dc3545;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
}

.chat-window {
    position: absolute;
    bottom: 80px;
    right: 0;
    width: 350px;
    height: 450px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    animation: slideUp 0.3s ease;
}

@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.chat-header {
    background: #007bff;
    color: white;
    padding: 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.chat-header-info {
    display: flex;
    align-items: center;
    gap: 10px;
}

.support-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
}

.support-info h6 {
    margin: 0;
    font-size: 14px;
    font-weight: 600;
}

.status {
    font-size: 12px;
    opacity: 0.9;
}

.status.online::before {
    content: "●";
    color: #28a745;
    margin-right: 4px;
}

.chat-actions {
    display: flex;
    gap: 5px;
}

.btn-minimize, .btn-close {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    padding: 5px;
    border-radius: 4px;
    transition: background 0.2s;
}

.btn-minimize:hover, .btn-close:hover {
    background: rgba(255, 255, 255, 0.1);
}

.chat-messages {
    flex: 1;
    padding: 15px;
    overflow-y: auto;
    background: #f8f9fa;
}

.message {
    margin-bottom: 15px;
}

.support-message .message-content {
    background: white;
    padding: 10px 12px;
    border-radius: 12px 12px 12px 4px;
    max-width: 80%;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.user-message .message-content {
    background: #007bff;
    color: white;
    padding: 10px 12px;
    border-radius: 12px 12px 4px 12px;
    max-width: 80%;
    margin-left: auto;
}

.message-content p {
    margin: 0 0 5px 0;
    font-size: 14px;
    line-height: 1.4;
}

.message-time {
    font-size: 11px;
    opacity: 0.7;
}

.chat-input-area {
    padding: 15px;
    background: white;
    border-top: 1px solid #e9ecef;
}

.chat-input-wrapper {
    display: flex;
    gap: 10px;
    align-items: center;
}

#chat-input {
    flex: 1;
    border: 1px solid #ddd;
    border-radius: 20px;
    padding: 10px 15px;
    font-size: 14px;
    outline: none;
    transition: border-color 0.2s;
}

#chat-input:focus {
    border-color: #007bff;
}

.btn-send {
    background: #007bff;
    border: none;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.2s;
}

.btn-send:hover {
    background: #0056b3;
}

.btn-send:disabled {
    background: #ccc;
    cursor: not-allowed;
}

/* Responsive */
@media (max-width: 768px) {
    .chat-window {
        width: 300px;
        height: 400px;
    }
}
</style>

<script>
let chatMinimized = false;

function toggleChatWidget() {
    const chatWindow = document.getElementById('chat-window');
    const isVisible = chatWindow.style.display !== 'none';
    
    if (isVisible) {
        closeChatWidget();
    } else {
        openChatWidget();
    }
}

function openChatWidget() {
    document.getElementById('chat-window').style.display = 'flex';
    document.getElementById('chat-badge').style.display = 'none';
    chatMinimized = false;
}

function closeChatWidget() {
    document.getElementById('chat-window').style.display = 'none';
    chatMinimized = false;
}

function minimizeChatWidget() {
    document.getElementById('chat-window').style.display = 'none';
    chatMinimized = true;
}

function sendChatMessage() {
    const input = document.getElementById('chat-input');
    const message = input.value.trim();
    
    if (message) {
        addUserMessage(message);
        input.value = '';
        
        // Simulate support response
        setTimeout(() => {
            addSupportMessage('Cảm ơn bạn đã liên hệ! Chúng tôi sẽ phản hồi sớm nhất có thể.');
        }, 1000);
    }
}

function addUserMessage(message) {
    const messagesContainer = document.getElementById('chat-messages');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'message user-message';
    messageDiv.innerHTML = `
        <div class="message-content">
            <p>${message}</p>
            <span class="message-time">${getCurrentTime()}</span>
        </div>
    `;
    messagesContainer.appendChild(messageDiv);
    scrollToBottom();
}

function addSupportMessage(message) {
    const messagesContainer = document.getElementById('chat-messages');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'message support-message';
    messageDiv.innerHTML = `
        <div class="message-content">
            <p>${message}</p>
            <span class="message-time">${getCurrentTime()}</span>
        </div>
    `;
    messagesContainer.appendChild(messageDiv);
    scrollToBottom();
    
    // Show notification if chat is closed
    if (document.getElementById('chat-window').style.display === 'none') {
        showChatNotification();
    }
}

function handleChatKeyPress(event) {
    if (event.key === 'Enter') {
        sendChatMessage();
    }
}

function getCurrentTime() {
    const now = new Date();
    return now.toLocaleTimeString('vi-VN', { 
        hour: '2-digit', 
        minute: '2-digit' 
    });
}

function scrollToBottom() {
    const messagesContainer = document.getElementById('chat-messages');
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

function showChatNotification() {
    document.getElementById('chat-badge').style.display = 'flex';
}

// Initialize chat widget
document.addEventListener('DOMContentLoaded', function() {
    // You can add initialization logic here
    console.log('Chat support widget initialized');
});
</script>
